import asyncio
from client.api import Client

async def main():
    # Create a client with bootstrap nodes
    client = Client(
        bootstrap_nodes="localhost:8001",  # Connect to bootstrap node
        model="deepseek-33b"  # Specify the model you want to use
    )
    
    try:
        # First, show available nodes
        nodes = await client.dht_discovery.get_nodes()
        print(f"üåê Available nodes: {len(nodes)}")
        
        for node in nodes:
            print(f"  ‚Ä¢ {node.node_id[:8]}... ({node.ip}:{node.port}) - {node.model} - Load: {node.load:.2f}")
        
        # Then generate text
        print("\nü§ñ Generating text...")
        response = await client.generate(
            prompt="What is LlamaNet?",
            max_tokens=150,
            temperature=0.7
        )
        
        if response:
            print(f"‚úÖ Response from {response.node_id[:8]}...:")
            print(f"   Generated by node {response.node_id}:")
            print(f"   {response.text}")
            print(f"   Generated {response.tokens_generated} tokens in {response.generation_time:.2f} seconds")
        else:
            print("‚ùå No response received")
    finally:
        await client.close()

if __name__ == "__main__":
    asyncio.run(main())
